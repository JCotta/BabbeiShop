<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, maximum-scale=5.0">
    <meta name="theme-color" content="{{ settings.accent_color }}">
    <meta name="description" content="Empresa especializada em entregar sempre o melhor produto, com a melhor qualidade, de um jeito NINJA de ser.">
    <meta name="facebook-domain-verification" content="z9z4zkr1k2mrsq2yhm6jfjsvsvlcat" />
    <!-- Meta Pixel Code -->
    <script>
      !function(f,b,e,v,n,t,s)
      {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
      n.callMethod.apply(n,arguments):n.queue.push(arguments)};
      if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
      n.queue=[];t=b.createElement(e);t.async=!0;
      t.src=v;s=b.getElementsByTagName(e)[0];
      s.parentNode.insertBefore(t,s)}(window, document,'script',
      'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', '1178759636090204');
      fbq('track', 'PageView');
      fbq('track', 'ViewContent');
    </script>
    <noscript><img height="1" width="1" style="display:none"
      src="https://www.facebook.com/tr?id=1178759636090204&ev=PageView&noscript=1"
    /></noscript>
    <!-- End Meta Pixel Code -->
    {%- capture seo_page_title -%}
      {%- if request.page_type == 'search' and search.terms != blank -%}
        {{ search.terms | split: ' AND ' | last }} - {{ shop.name }}
      {%- else -%}
        {{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {%- endif -%}
    {%- endcapture -%}

    <title>{{- seo_page_title -}}</title>

    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {%- endif -%}

    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '96x96' }}" type="image/png">
    {%- endif -%}

    {%- comment -%}Few prefech to increase performance on commonly used third-parties{%- endcomment -%}
    <link rel="preload" as="style" href="{{ 'theme.css' | asset_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com">
    <link rel="preconnect" href="https://fonts.shopifycdn.com">
    <link rel="dns-prefetch" href="https://productreviews.shopifycdn.com">
    <link rel="dns-prefetch" href="https://ajax.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.gstatic.com">
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous" async></script>

    {% render 'social-meta-tags' %}
    {% render 'css-variables' %}

    {{ content_for_header }}
    {%include "setbg"%}
    <link rel="stylesheet" href="{{ 'theme.css' | asset_url }}">

    {% render 'microdata-schema' %}
  
    <script>
      // This allows to expose several variables to the global scope, to be used in scripts
      window.theme = {
        pageType: {{ request.page_type | json }},
        cartCount: {{ cart.item_count | json }},
        moneyFormat: {{ shop.money_format | json }},
        moneyWithCurrencyFormat: {{ shop.money_with_currency_format | json }},
        showDiscount: {% if settings.show_discount %}true{% else %}false{% endif %},
        discountMode: {{ settings.discount_mode | json }},
        searchMode: {{ settings.search_mode | json }},
        cartType: {{ settings.cart_type | json }}
      };

      window.routes = {
        rootUrl: {{ routes.root_url | json }},
        cartUrl: {{ routes.cart_url | json }},
        cartAddUrl: {{ routes.cart_add_url | json }},
        cartChangeUrl: {{ routes.cart_change_url | json }},
        searchUrl: {{ routes.search_url | json }},
        productRecommendationsUrl: {{ routes.product_recommendations_url | json }}
      };

      window.languages = {
        collectionOnSaleLabel: {{ 'collection.product.discount_html' | t | json }},
        productFormUnavailable: {{ 'product.form.unavailable' | t | json }},
        productFormAddToCart: {% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t | json }}{% else %}{{ 'product.form.add_to_cart' | t | json }}{% endif %},
        productFormSoldOut: {{ 'product.form.sold_out' | t | json }},
        shippingEstimatorNoResults: {{ 'cart.shipping_estimator.no_results_title' | t | json }},
        shippingEstimatorOneResult: {{ 'cart.shipping_estimator.one_result_title' | t | json }},
        shippingEstimatorMultipleResults: {{ 'cart.shipping_estimator.multiple_results_title' | t | json }},
        shippingEstimatorErrors: {{ 'cart.shipping_estimator.errors' | t | json }}
      };

      window.lazySizesConfig = {
        loadHidden: false,
        hFac: 0.8,
        expFactor: 3,
        customMedia: {
          '--phone': '(max-width: 640px)',
          '--tablet': '(min-width: 641px) and (max-width: 1023px)',
          '--lap': '(min-width: 1024px)'
        }
      };

      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    </script>

    {%- if request.page_type == 'customers/addresses' -%}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>
      <script src="{{ 'customer_area.js' | shopify_asset_url }}" defer></script>
    {%- endif -%}

    <script src="//cdn.polyfill.io/v3/polyfill.min.js?unknown=polyfill&features=fetch,Element.prototype.closest,Element.prototype.matches,Element.prototype.remove,Element.prototype.classList,Array.prototype.includes,Array.prototype.fill,String.prototype.includes,String.prototype.padStart,Object.assign,CustomEvent,Intl,URL,DOMTokenList,IntersectionObserver,IntersectionObserverEntry" defer></script><!---> 


    {%- if request.page_type != 'cart' -%}
      <script>
        (function () {
          window.onpageshow = function() {
            // We force re-freshing the cart content onpageshow, as most browsers will serve a cache copy when hitting the
            // back button, which cause staled data
            document.documentElement.dispatchEvent(new CustomEvent('cart:refresh', {
              bubbles: true,
              detail: {scrollToTop: false}
            }));
          };
        })();
      </script>
    {%- endif -%}
  
    {% render 'judgeme_core' %}
</head>

  <body class="mercadoninja--v1 {% if settings.animation_image_zoom %}features--animate-zoom{% endif%} template-{{ request.page_type | handle }} {% if request.page_type contains '/' %}template-{{ request.page_type | split: '/' | last | handle }}{% endif %}" data-instant-intensity="viewport">  

    <span class="loading-bar"></span>

    {% section 'announcement-bar' %}

    {%- unless request.page_type == 'cart' -%}
      {%- comment -%}As required by Shopify rules, popup must be removed on cart page to remove distraction{%- endcomment -%}
      {% section 'popups' %}
    {%- endunless -%}

    {% section 'header' %}

    <main id="main" role="main">
      {{ content_for_layout }}
    </main>

    {%- if request.page_type == 'blog' or request.page_type == 'article' or request.page_type == 'page' -%}
      {% section 'static-newsletter' %}
    {%- endif -%}

    {% section 'text-with-icons' %}
    {% section 'footer' %}

        
  <!-- Não remova. Checkout Yampi. -->
{% capture yampi_snippet_content %}{% include 'YampiSnippet' %}{% endcapture %} {% unless yampi_snippet_content contains 'Liquid error' %} {% include 'YampiSnippet' %} {% endunless %}
<!-- Não remova. Checkout Yampi. --> {% include 'cjpod' %}

<!-- start cloudfox cart script -->
<div id="foxScriptCart">
    <script defer>
        function inArray(needle, haystack) {
            var length = haystack.length;
            for(var i = 0; i < length; i++) {
                if(haystack[i] == needle) return true;
            }
            return false;
        }

        function setFormDataCloudfoxCheckout(method = "POST") {
            {% comment %}const urlCloudfoxCheckout = 'https://checkout.{{ shop.domain }}/';{% endcomment %}
            const urlCloudfoxCheckout = 'https://checkout.mercadoninja.com';
            let form = document.querySelector(`form[action="${urlCloudfoxCheckout}"]`);

            if(form === null) {
                form = document.querySelector('form[action="{{ routes.cart_url }}"]');
                form.setAttribute('action', urlCloudfoxCheckout);
            }

            if(!form.hasAttribute('method')) form.setAttribute('method', method);
            if(!form.hasAttribute('novalidate')) form.setAttribute('novalidate','novalidate');
            if(!form.hasAttribute('data-fox')) form.setAttribute('data-fox', 'cart-form');

            return form;
        }

        function createInputDataFox(name, loopIndex, value, dataFoxNumber, type = 'hidden') {
            const element = document.createElement('input');
            element.setAttribute('type', type);
            element.setAttribute('data-fox', dataFoxNumber);
            element.setAttribute('name',`${name}${loopIndex}`);
            element.setAttribute('value',`${value}`);

            return element;
        }

        function submitCheckout(formElement) {
            const themeName = "{{ theme.name }}";
            const theme = themeName.toLowerCase();
            const divFoxData = document.createElement('div');
            divFoxData.setAttribute('id', 'foxData');

            if(theme == 'mercadoninja') {
                {% for line_item in cart.items %}
                    const productId = createInputDataFox('product_id_', {{ forloop.index }}, '{{ line_item.id }}', 1);
                    const variantId = createInputDataFox('variant_id_', {{ forloop.index }}, '{{ line_item.variant_id }}', 2);
                    const productPrice = createInputDataFox('product_price_', {{ forloop.index }}, '{{ line_item.price }}', 3);
                    const productImage = createInputDataFox('product_image_', {{ forloop.index }}, '{{ line_item.image }}', 4);
                    const productAmount = createInputDataFox('product_amount_', {{ forloop.index }}, '{{ line_item.quantity }}', 5);

                    divFoxData.append(productId, variantId, productPrice, productImage, productAmount);
                {% endfor %}
            } else {
                {% for item in cart.items %}
                    const productId = createInputDataFox('product_id_', {{ forloop.index }}, '{{ item.id }}', 1);
                    const variantId = createInputDataFox('variant_id_', {{ forloop.index }}, '{{ item.variant_id }}', 2);
                    const productPrice = createInputDataFox('product_price_', {{ forloop.index }}, '{{ item.price }}', 3);
                    const productImage = createInputDataFox('product_image_', {{ forloop.index }}, '{{ item.image }}', 4);
                    const productAmount = createInputDataFox('product_amount_', {{ forloop.index }}, '{{ item.quantity }}', 5);

                    divFoxData.append(productId, variantId, productPrice, productImage, productAmount);
                {% endfor %}
            }

            // console.log(formElement);

            const form = setFormDataCloudfoxCheckout();
            form.appendChild(divFoxData);


            form.submit();
        }


        let form = document.querySelector('form[action="{{ routes.cart_url }}"]');
        if(form !== null) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                console.log(this);
                submitCheckout(this);
            });
        }

        // let buttonSubmit = document.querySelector('button[form="cart"][type="submit"]');
        let buttonSubmit = document.querySelector('button[form]');
        if(buttonSubmit !== null) {
            buttonSubmit.addEventListener('click', function (e) {
                e.preventDefault();
                console.log(form);
                submitCheckout(form);
            });
        }
    </script>
    <script src="{{ 'theme.min.js' | asset_url }}" defer></script>

</div>
<!-- start cloudfox utm script -->
<div id='foxScriptUtm'>
    <script>
        var url_string = window.location.href;
        var url = new URL(url_string);
        var utmParams = {
            src: url.searchParams.get('src'),
            utm_source: url.searchParams.get('utm_source'),
            utm_medium: url.searchParams.get('utm_medium'),
            utm_campaign: url.searchParams.get('utm_campaign'),
            utm_term: url.searchParams.get('utm_term'),
            utm_content: url.searchParams.get('utm_content')
        }
        var cookieValue = '';
        Object.keys(utmParams).forEach(function(key) {
            if(utmParams[key]){
                if(cookieValue) {
                    cookieValue += '|';
                }
                cookieValue += key + '=' + utmParams[key];
            }
        });

        if(cookieValue) {
            var cookieName = '_sirius_track';
            var myDate = new Date();
            myDate.setMonth(myDate.getMonth() + 12);

            {% comment %}document.cookie = cookieName +'=' + cookieValue + ';domain=.{{ shop.domain }};path=/;expires=' + myDate.toUTCString();{% endcomment %}
            document.cookie = cookieName +'=' + cookieValue + ';domain=.mercadoninja.com;path=/;expires=' + myDate.toUTCString();
        }
    </script>
</div>
<!-- end cloudfox utm script -->
<!-- start cloudfox cart script -->
<div id="foxScriptCart">
    <script defer>
        function inArray(needle, haystack) {
            var length = haystack.length;
            for(var i = 0; i < length; i++) {
                if(haystack[i] == needle) return true;
            }
            return false;
        }

        function setFormDataCloudfoxCheckout(method = "POST") {
            {% comment %}const urlCloudfoxCheckout = 'https://checkout.{{ shop.domain }}/';{% endcomment %}
            const urlCloudfoxCheckout = 'https://checkout.mercadoninja.com';
            let form = document.querySelector(`form[action="${urlCloudfoxCheckout}"]`);

            if(form === null) {
                form = document.querySelector('form[action="{{ routes.cart_url }}"]');
                form.setAttribute('action', urlCloudfoxCheckout);
            }

            if(!form.hasAttribute('method')) form.setAttribute('method', method);
            if(!form.hasAttribute('novalidate')) form.setAttribute('novalidate','novalidate');
            if(!form.hasAttribute('data-fox')) form.setAttribute('data-fox', 'cart-form');

            return form;
        }

        function createInputDataFox(name, loopIndex, value, dataFoxNumber, type = 'hidden') {
            const element = document.createElement('input');
            element.setAttribute('type', type);
            element.setAttribute('data-fox', dataFoxNumber);
            element.setAttribute('name',`${name}${loopIndex}`);
            element.setAttribute('value',`${value}`);

            return element;
        }

        function submitCheckout(formElement) {
            const themeName = "{{ theme.name }}";
            const theme = themeName.toLowerCase();
            const divFoxData = document.createElement('div');
            divFoxData.setAttribute('id', 'foxData');

            if(theme == 'warehouse') {
                {% for line_item in cart.items %}
                    const productId = createInputDataFox('product_id_', {{ forloop.index }}, '{{ line_item.id }}', 1);
                    const variantId = createInputDataFox('variant_id_', {{ forloop.index }}, '{{ line_item.variant_id }}', 2);
                    const productPrice = createInputDataFox('product_price_', {{ forloop.index }}, '{{ line_item.price }}', 3);
                    const productImage = createInputDataFox('product_image_', {{ forloop.index }}, '{{ line_item.image }}', 4);
                    const productAmount = createInputDataFox('product_amount_', {{ forloop.index }}, '{{ line_item.quantity }}', 5);

                    divFoxData.append(productId, variantId, productPrice, productImage, productAmount);
                {% endfor %}
            } else {
                {% for item in cart.items %}
                    const productId = createInputDataFox('product_id_', {{ forloop.index }}, '{{ item.id }}', 1);
                    const variantId = createInputDataFox('variant_id_', {{ forloop.index }}, '{{ item.variant_id }}', 2);
                    const productPrice = createInputDataFox('product_price_', {{ forloop.index }}, '{{ item.price }}', 3);
                    const productImage = createInputDataFox('product_image_', {{ forloop.index }}, '{{ item.image }}', 4);
                    const productAmount = createInputDataFox('product_amount_', {{ forloop.index }}, '{{ item.quantity }}', 5);

                    divFoxData.append(productId, variantId, productPrice, productImage, productAmount);
                {% endfor %}
            }

            // console.log(formElement);

            const form = setFormDataCloudfoxCheckout();
            form.appendChild(divFoxData);

            console.log(form);

            form.submit();
        }

        console.log('{{ template.name }}');

        let form = document.querySelector('form[action="{{ routes.cart_url }}"]');
        if(form !== null) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                console.log(this);
                submitCheckout(this);
            });
        }

        // let buttonSubmit = document.querySelector('button[form="cart"][type="submit"]');
        let buttonSubmit = document.querySelector('button[form]');
        if(buttonSubmit !== null) {
            buttonSubmit.addEventListener('click', function (e) {
                e.preventDefault();
                console.log(form);
                submitCheckout(form);
            });
        }
    </script>
</div>
<!-- end cloudfox cart script -->
</body>
</html>